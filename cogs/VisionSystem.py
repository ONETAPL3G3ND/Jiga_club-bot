import disnake
from disnake.ext import commands
import config
import aiohttp
from io import BytesIO


inf = {}

class NextButton(disnake.ui.View):
    def __init__(self):
        super().__init__(timeout=None)

    @disnake.ui.button(label="–°–ª–µ–¥—É—é—â–∏–π —à–∞–≥", style=disnake.ButtonStyle.green, custom_id="NextButton")
    async def NextB(self, button: disnake.ui.Button, interaction: disnake.Interaction):
        if inf.get(interaction.author.id) == None:
            await interaction.send("–û—à–∏–±–∫–∞, –Ω–∞—á–Ω–∏—Ç–µ –∑–∞–Ω–æ–≤–æ!", ephemeral=True)
            return
        await interaction.response.send_modal(NextModal())


class NextModal(disnake.ui.Modal):
    def __init__(self):
        components = [
            disnake.ui.TextInput(label="–£—Ä–æ–≤–µ–Ω—å –ø—Ä–æ–∫–∞—á–∫–∏ –ø–æ–¥–≤–µ—Å–∫–∏:", placeholder="–í–≤–µ–¥–∏—Ç–µ —É—Ä–æ–≤–µ–Ω—å –ø—Ä–æ–∫–∞—á–∫–∏ –ø–æ–¥–≤–µ—Å–∫–∏ ", custom_id="pendants"),
            disnake.ui.TextInput(label="–ï—Å—Ç—å –ª–∏ —Ç—É—Ä–±–æ–Ω–∞–¥–¥—É–≤?", placeholder="–î–∞/–ù–µ—Ç", custom_id="turbo"),
            disnake.ui.TextInput(label="–ß–∏–ø—ã: ", placeholder="–í–≤–µ–¥–∏—Ç–µ –≤—Å–µ –≤–∞—à–∏ —á–∏–ø—ã", custom_id="chip")
        ]
        super().__init__(title="–û–ø—É–±–ª–∏–∫–æ–≤–∞—Ç—å –º–∞—à–∏–Ω—É", components=components, custom_id="PublicNextAuto")

    async def callback(self, interaction: disnake.ModalInteraction) -> None:
        global inf
        nameAuto: str = inf.get(interaction.author.id).get("NameAuto")
        url = inf.get(interaction.author.id).get("url")
        Engine = inf.get(interaction.author.id).get("Engine")
        Transmissions = inf.get(interaction.author.id).get("Transmissions")
        breakes = inf.get(interaction.author.id).get("breakes")
        pendants = interaction.text_values["pendants"]
        turbo = interaction.text_values["turbo"]
        chip = interaction.text_values["chip"]

        embed = disnake.Embed(color=0x2F3136)
        embed.set_author(name=interaction.author.name, icon_url=interaction.author.avatar.url)
        embed.description = f'''{interaction.author.mention}
        ‚ñ¨‚ñ¨‚ñ¨‚ñ¨‚ñ¨‚ñ¨‚ñ¨‚ñ¨‚ñ¨‚ñ¨‚ñ¨~‡Æú€©€û€©‡Æú~‚ñ¨‚ñ¨‚ñ¨‚ñ¨‚ñ¨‚ñ¨‚ñ¨‚ñ¨‚ñ¨‚ñ¨‚ñ¨‚ñ¨‚ñ¨‚ñ¨
        **{nameAuto}**
        
        –£—Ä–æ–≤–µ–Ω—å –ø—Ä–æ–∫–∞—á–∫–∏ –¥–≤–∏–≥–∞—Ç–µ–ª—è: {Engine}
        –£—Ä–æ–≤–µ–Ω—å –ø—Ä–æ–∫–∞—á–∫–∏ —Ç—Ä–∞–Ω—Å–º–∏—Å—Å–∏–∏: {Transmissions}
        –£—Ä–æ–≤–µ–Ω—å –ø—Ä–æ–∫–∞—á–∫–∏ —Ç–æ—Ä–º–æ–∑–æ–≤: {breakes}
        –£—Ä–æ–≤–µ–Ω—å –ø—Ä–æ–∫–∞—á–∫–∏ –ø–æ–¥–≤–µ—Å–∫–∏: {pendants}
        –ï—Å—Ç—å –ª–∏ —Ç—É—Ä–±–æ–Ω–∞–¥–¥—É–≤: {turbo}
        –ß–∏–ø—ã: {chip}'''
        async with aiohttp.ClientSession() as session:
            async with session.get(url) as resp:
                if resp.status == 200:
                    image_bytes = await resp.read()
                    image_file = BytesIO(image_bytes)
                    file = disnake.File(image_file, filename=f"image.png")
                    embed.set_image(file=file)
                    channel = interaction.guild.get_channel(1186046754228015124)
                    await channel.send(embed=embed)
                    await interaction.send("–£–¥–∞—á–Ω–æ!", ephemeral=True)
                else:
                    await interaction.send("–ù–µ —É–¥–∞–ª–æ—Å—å –∑–∞–≥—Ä—É–∑–∏—Ç—å –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–µ", ephemeral=True)
        del inf[interaction.author.id]


class Modal(disnake.ui.Modal):
    def __init__(self):
        components = [
            disnake.ui.TextInput(label="–ù–∞–∑–≤–∞–Ω–∏–µ –º–∞—à–∏–Ω—ã:", placeholder='–í–≤–µ–¥–∏—Ç–µ –Ω–∞–∑–≤–∞–Ω–∏–µ –º–∞—à–∏–Ω—ã', custom_id="NameAuto"),
            disnake.ui.TextInput(label="–í–≤–µ–¥–∏—Ç–µ —Å—Å—ã–ª–∫—É –Ω–∞ —Ñ–æ—Ç–æ –º–∞—à–∏–Ω—É:", placeholder="—Å—Å—ã–ª–∫–∞", custom_id="url"),
            disnake.ui.TextInput(label="–£—Ä–æ–≤–µ–Ω—å –ø—Ä–æ–∫–∞—á–∫–∏ –¥–≤–∏–≥–∞—Ç–µ–ª—è:", placeholder="–í–≤–µ–¥–∏—Ç–µ —É—Ä–æ–≤–µ–Ω—å –ø—Ä–æ–∫–∞—á–∫–∏ –¥–≤–∏–≥–∞—Ç–µ–ª—è", custom_id="Engine"),
            disnake.ui.TextInput(label="–£—Ä–æ–≤–µ–Ω—å –ø—Ä–æ–∫–∞—á–∫–∏ —Ç—Ä–∞–Ω—Å–º–∏—Å—Å–∏–∏:", placeholder="–í–≤–µ–¥–∏—Ç–µ —É—Ä–æ–≤–µ–Ω—å –ø—Ä–æ–∫–∞—á–∫–∏ —Ç—Ä–∞–Ω—Å–º–∏—Å—Å–∏–∏", custom_id="Transmissions"),
            disnake.ui.TextInput(label="–£—Ä–æ–≤–µ–Ω—å –ø—Ä–æ–∫–∞—á–∫–∏ —Ç–æ—Ä–º–æ–∑–æ–≤:", placeholder="–í–≤–µ–¥–∏—Ç–µ —É—Ä–æ–≤–µ–Ω—å –ø—Ä–æ–∫–∞—á–∫–∏ –¢–æ—Ä–º–æ–∑–æ–≤", custom_id="breakes"),
        ]
        super().__init__(title="–û–ø—É–±–ª–∏–∫–æ–≤–∞—Ç—å –º–∞—à–∏–Ω—É",components=components, custom_id="PublicAuto")

    async def callback(self, interaction: disnake.ModalInteraction) -> None:
        global inf
        nameAuto: str = interaction.text_values["NameAuto"]
        url = interaction.text_values["url"]
        Engine = interaction.text_values["Engine"]
        Transmissions = interaction.text_values["Transmissions"]
        breakes = interaction.text_values["breakes"]
        inf[interaction.author.id] = {"NameAuto": nameAuto, "url": url, "Engine":Engine, "Transmissions": Transmissions, "breakes":breakes}
        # pendants = interaction.text_values["pendants"]
        # turbo = interaction.text_values["turbo"]

        await interaction.send("–ü–µ—Ä–µ–π–¥–∏—Ç–µ –∫ —Å–ª–µ–¥—É—é—â–µ–º—É —à–∞–≥—É", view=NextButton(), ephemeral=True)


class View(disnake.ui.View):
    def __init__(self):
        super().__init__(timeout=None)

    @disnake.ui.button(label="üöó–û–ø—É–±–ª–∏–∫–æ–≤–∞—Ç—å –º–∞—à–∏–Ω—É", style=disnake.ButtonStyle.danger, custom_id="PublicAuto")
    async def VisionButton(self, button: disnake.ui.Button, interaction: disnake.Interaction):
        global inf
        if inf.get(interaction.author.id) == None:
            await interaction.response.send_modal(Modal())
            return
        await interaction.send("–ü–µ—Ä–µ–π–¥–∏—Ç–µ –∫ —Å–ª–µ–¥—É—é—â–µ–º—É —à–∞–≥—É", view=NextButton(), ephemeral=True)





class VisionSystem(commands.Cog):
    def __init__(self, bot):
        self.bot = bot

    @commands.slash_command()
    async def send_vision(self, iteraction: disnake.CommandInteraction):
        if iteraction.author.id in config.Admin_id:
            embed = disnake.Embed(color=0x2F3136)
            embed.set_author(name="–í—ã—Å—Ç–∞–≤–∏—Ç—å –º–∞—à–∏–Ω—É:")
            embed.description = '''‚ñ¨‚ñ¨‚ñ¨‚ñ¨‚ñ¨‚ñ¨‚ñ¨‚ñ¨‚ñ¨‚ñ¨‚ñ¨~‡Æú€©€û€©‡Æú~‚ñ¨‚ñ¨‚ñ¨‚ñ¨‚ñ¨‚ñ¨‚ñ¨‚ñ¨‚ñ¨‚ñ¨‚ñ¨‚ñ¨‚ñ¨‚ñ¨
            –Ø –∑–¥–µ—Å—å, —á—Ç–æ–±—ã –ø–æ–º–æ—á—å –≤–∞–º –æ–ø—É–±–ª–∏–∫–æ–≤–∞—Ç—å –≤–∞—à—É –º–∞—à–∏–Ω—É –Ω–∞ –≤—ã—Å—Ç–∞–≤–∫–µ. 
            –ù–∞–∂–º–∏—Ç–µ –Ω–∞ –∫–Ω–æ–ø–∫—É '–û–ø—É–±–ª–∏–∫–æ–≤–∞—Ç—å –º–∞—à–∏–Ω—É' –Ω–∏–∂–µ —ç—Ç–æ–≥–æ —Å–æ–æ–±—â–µ–Ω–∏—è, —á—Ç–æ–±—ã –ø—Ä–µ–¥–æ—Å—Ç–∞–≤–∏—Ç—å –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ –≤–∞—à–µ–º –∞–≤—Ç–æ–º–æ–±–∏–ª–µ –¥–ª—è —É—á–∞—Å—Ç–∏—è –≤ –≤—ã—Å—Ç–∞–≤–∫–µ. 
            –≠—Ç–æ —à–∞–Ω—Å –ø—Ä–∏–≤–ª–µ—á—å –≤–Ω–∏–º–∞–Ω–∏–µ –∏ –ø–æ–∫–∞–∑–∞—Ç—å –≤–∞—à –ø—Ä–æ–µ–∫—Ç –º–∏—Ä—É. 
            –°–ø–∞—Å–∏–±–æ –∑–∞ —É—á–∞—Å—Ç–∏–µ!'''

            view = View()

            await iteraction.send(embed=embed, view=view)

    @commands.Cog.listener()
    async def on_connect(self):
        self.bot.add_view(View(), message_id=1187883386908442715)

def setup(bot):
    bot.add_cog(VisionSystem(bot))
